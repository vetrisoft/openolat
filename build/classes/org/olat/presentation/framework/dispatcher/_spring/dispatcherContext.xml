<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
  http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
  http://www.springframework.org/schema/context 
  http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  
  
  <!--
		*****************************************
		*** Configuration for core.dispatcher ***
		*****************************************
		
		../default/ mapped to defaultbean etc.
		configures DispatcherActions to be called on certain paths.
		
		[!!] reserved starting pathes are
		[!!] /n/ for named dispatchers used by the extension mechansim
		[!!] /m/ for per user session mapper
		[!!] /g/ for the global mapper
		[!!] if you use one of those you get an exception.
	-->
	<bean 	id="core.dispatchers" 
			class="org.olat.presentation.framework.dispatcher.DispatcherConfig" 
			abstract="true">
			<!-- System defined dispatchers -->
			<property name="dispatchers">
	  			<map>
	  				<entry key="/">
	  					<ref bean="redirect2defaultbean" />
	  				</entry>
	  				<entry key="/error">
	  					<ref bean="errorbean" />
	  				</entry>
	  			</map>
	  		</property>
	</bean>
	
	<bean id ="redirect2defaultbean" class = "org.olat.presentation.framework.dispatcher.RedirectToDefaultDispatcher" />
	
	<!-- Override this bean in extconfig.xml with your configuration -->
	<bean 	id="dispatcherConfig" class="org.olat.presentation.framework.dispatcher.DispatcherConfig" 
			parent="core.dispatchers">
	  		<property name="extconfigdispatchers">
	  			<map>
	  				<!-- TODO: <entry key="::DEFAULT::" value="/default/" /> -->
	  				<!-- TODO: <entry key="/default/">
	  					<ref bean="defaultbean" />
	  				</entry> -->
	  			</map>
	  		</property>
	</bean>
  
	<!-- Configure the main url dispatcher: here: url http://host:port/webappname/ leads to http://host:port/webappname/go
		configures DispatcherActions to be called on certain paths -->
	<bean id="mainUrlDispatcher"
		class="org.olat.presentation.framework.dispatcher.DispatcherAction"  >
		<property name="defaultDispatcherName" value="/dmz/" />
		<property name="dispatchers">
			<map>
				<!-- <entry key="/go/"><ref bean="demodispatcher" /></entry>-->
				<entry key="/dmz/">
					<ref bean="dmzbean" />
				</entry>
				<!--  //TODO:PB:OLAT-4047 --> 
				<entry key="/url/">
					<!-- if you change /url make sure you also modify _static/js/BTinyHelper.js accordingly -->
					<ref bean="restdispatcher" />
				</entry> <!-- 
				 -->
				<!-- for fast developement mode  
				<entry key="/temp/">
					<ref bean="tempdispatcher" />
				</entry>
				-->
				<entry key="/">
					<ref bean="redirect2defaultbean" />
				</entry>
				<!-- Feature provided by Frentix:
					see
					- Java comment in RemoteLoginformDispatcher
					- http://bugs.olat.org/jira/browse/OLAT-3360
					disabled by default  
				<entry key="/remotelogin/">
					<ref bean="remoteloginbean" />
				</entry>
				 -->
				<entry key="/auth/">
					<!-- if you change /auth make sure you also modify richText/_static/js/BTinyHelper.js accordingly -->
					<ref bean="authbean" />
				</entry>
				<entry key="/shib/">
					<ref bean="shibbean" />
				</entry>
				<entry key="/stats.html">
					<ref bean="statisticbean" />
				</entry>
				<entry key="/admin.html">
					<ref bean="adminbean" />
				</entry>
				<entry key="/raw/">
					<ref bean="staticsrawbean" />
				</entry>
				<entry key="/classpath/">
					<ref bean="classpathstaticsrawbean" />
				</entry>
				<entry key="/help/">
					<ref bean="contexthelpbean" />
				</entry>
				<entry key="/qti/">
					<ref bean="secstaticlegacybean" />
				</entry>
				<entry key="/secstatic/">
					<ref bean="secstaticlegacybean" />
				</entry>
				<entry key="/error/">
					<ref bean="errorMailBean" />
				</entry>
				<entry key="/podcast/">
					<ref bean="podcastMediaBean" />
				</entry>
				<entry key="/blog/">
					<ref bean="blogMediaBean" />
				</entry>
				<!-- uncomment this if the xml catolog export should be enabled
					<entry key="/catalog.xml">
					<ref bean="catexport" />
					</entry>
				-->

			</map>
		</property>
	</bean>
	
	
	<bean id="restdispatcher" class="org.olat.presentation.framework.dispatcher.RESTDispatcher" />
	
	
	
	<!-- send bug report dispatcher -->
	<bean id="errorMailBean" class="org.olat.presentation.framework.dispatcher.ErrorFeedbackMailer" />

	<!--  all olat dispatchers -->
	<bean id="dmzbean" class="org.olat.presentation.framework.dispatcher.DMZDispatcher">
		<!-- defines the first page if /dmz/ only is dispatched 
		DEFAULT -->
		<property name="chiefControllerCreator">
			<bean
				class="org.olat.presentation.framework.core.chiefcontrollers.BaseChiefControllerCreator">
				<property name="contentControllerCreator">
					<!-- creates a BasicFullWebappController with DMZ content -->
					<bean class="org.olat.presentation.security.authentication.DMZContentControllerCreator" >
						<property name="controllerCreator">
							<bean class="org.olat.presentation.framework.core.control.creator.AutoCreator" scope="prototype">
								<property name="className" value="org.olat.presentation.security.authentication.LoginAuthprovidersController" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
		<!-- defines first pages of other dmz entry points, e.g. /dmz/register etc. -->
		<property name="dmzServicesByPath">
			<map>
				<!-- triggers registration workflow -->
				<entry key="/registration/">
					<bean
						class="org.olat.presentation.framework.core.chiefcontrollers.BaseChiefControllerCreator">
						<property name="contentControllerCreator">
							<!-- creates a BasicFullWebappController with DMZ content -->
							<bean class="org.olat.presentation.registration.DMZRegistrationContentControllerCreator" >
								<property name="controllerCreator">
								<bean class="org.olat.presentation.framework.core.control.creator.AutoCreator" scope="prototype">
									<property name="className" value="org.olat.presentation.registration.RegistrationController" />
								</bean>
								</property>
							</bean>
						</property>
					</bean>
				</entry>
				<!-- triggers password change workflow -->
				<entry key="/pwchange/">
					<bean
						class="org.olat.presentation.framework.core.chiefcontrollers.BaseChiefControllerCreator">
						<property name="contentControllerCreator">
							<!-- creates a BasicFullWebappController with DMZ content -->
							<bean class="org.olat.presentation.registration.DMZPWChangeContentControllerCreator" >
								<property name="controllerCreator">
								<bean class="org.olat.presentation.framework.core.control.creator.AutoCreator" scope="prototype">
									<property name="className" value="org.olat.presentation.registration.PwChangeController" />
								</bean>
								</property>
							</bean>
						</property>
					</bean>
				</entry>
				<!-- triggers shibboleth registration workflow -->
				<entry key="/shibregister/">
					<bean
						class="org.olat.presentation.framework.core.chiefcontrollers.BaseChiefControllerCreator">
						<property name="contentControllerCreator">
							<!-- creates a BasicFullWebappController with DMZ content -->
							<bean class="org.olat.presentation.security.authentication.shibboleth.DMZShibRegistrationContentControllerCreator" >
								<property name="controllerCreator">
								<bean class="org.olat.presentation.framework.core.control.creator.AutoCreator" scope="prototype">
									<property name="className" value="org.olat.presentation.security.authentication.shibboleth.ShibbolethRegistrationController" />
								</bean>
								</property>
							</bean>
						</property>
					</bean>
				</entry>
				<!-- triggers email change workflow -->
				<entry key="/emchange/">
					<bean
						class="org.olat.presentation.framework.core.chiefcontrollers.BaseChiefControllerCreator">
						<property name="contentControllerCreator">
							<!-- creates a BasicFullWebappController with DMZ content -->
							<bean class="org.olat.presentation.registration.DMZEMChangeContentControllerCreator" >
								<property name="controllerCreator">
								<bean class="org.olat.presentation.framework.core.control.creator.AutoCreator" scope="prototype">
									<property name="className" value="org.olat.presentation.user.ChangeEMailController" />
								</bean>
								</property>
							</bean>
						</property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="authbean"
		class="org.olat.presentation.framework.dispatcher.AuthenticatedDispatcher">
		<!-- set arg to true if you want to force only access to olat 
		over a secured http session. Otherwise the sessions get invalidated -->
		<constructor-arg index="0">
			<value>false</value>
		</constructor-arg>
	</bean>	
	
	<!--  provides the possibility to log in using a remote loginform, e.g. from a portal.
		The follwing requirements are given:
		username parameter: username
		password parameter: pwd
		form submit method : POST (GET not allowed)
		form action: /olat/remotelogin/
	-->
	<bean id="remoteloginbean" class="org.olat.presentation.framework.dispatcher.RemoteLoginformDispatcher" />
	
	<bean id="tempdispatcher"
		class="org.olat.presentation.framework.dispatcher.TemporaryAutoDispatcher" />

	<bean id="shibbean"
		class="org.olat.presentation.security.authentication.shibboleth.ShibbolethDispatcher" />
		
	<!--  static files delivery. See org.olat.presentation.framework.dispatcher.mapper.package.html for more infos -->
	<bean id="staticsrawbean"
		class="org.olat.presentation.framework.dispatcher.StaticMediaDispatcher"
		>
		<constructor-arg index="0">
			<value>/raw/</value>
		</constructor-arg>
	</bean>
	<bean id="classpathstaticsrawbean" 
		depends-on="staticsrawbean"
		class="org.olat.presentation.framework.dispatcher.ClassPathStaticDispatcher"
		>
		<constructor-arg index="0">
			<!-- 
				true: copy resources to webapp/static/classpath/ and deliver files via staticsrawbean 
					or mod_jk if configured properly. Note: it can also make sense to set this to true
					withoud mod_jk to reduce overhad with files delivered from the jars
				false: don't copy files and deliver files directly from classpath (slower)
				If unsure, use false.
			 -->
			<value>${server.modjk.enabled}</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>/classpath/</value>
		</constructor-arg>
	</bean>
	
	
	<bean id="contexthelpbean"
		class="org.olat.presentation.framework.common.contextHelp.ContextHelpDispatcher"
		>
		<constructor-arg index="0">
			<value>/help/</value>
		</constructor-arg>
	</bean>
	
	
	<bean id="statisticbean"
		class="org.olat.presentation.framework.dispatcher.MRTGStatsDispatcher">
		<constructor-arg ref="coordinatorManager" />
		<property name="monitoringHost" value="127.0.0.1" />
		<property name="instanceId" value="${instance.id}"/>
	</bean>
	<bean id="secstaticlegacybean"
		class="org.olat.presentation.framework.dispatcher.legacy.StaticsLegacyDispatcher">
		<property name="inputBufferSize" value="32768" />
		<property name="outputBufferSize" value="32768" />
	</bean>

	<bean id="adminbean"
		class="org.olat.presentation.framework.dispatcher.AdminModuleDispatcher" />
	<!-- uncomment this if the xml catolog export should be enabled -->
	<!-- 
	<bean id ="catexport" class = "org.olat.presentation.framework.dispatcher.CatalogExportModuleDispatcher" >
		<constructor-arg index="0">5</constructor-arg>
	</bean>
	 -->
	<!-- uncomment this and comment above line if automatic guest login should be enabled  <bean id ="redirect2defaultbean" class = "org.olat.presentation.framework.dispatcher.RedirectToAutoGuestLoginDispatcher" /> -->


	<!-- podcast media dispatcher -->
	<bean id="podcastMediaBean" class="org.olat.presentation.framework.dispatcher.webfeed.FeedMediaDispatcher" />

	<!-- blog media dispatcher -->
	<bean id="blogMediaBean" class="org.olat.presentation.framework.dispatcher.webfeed.FeedMediaDispatcher" />

	

	<!-- Search components -->
	<bean id="userSearchUIService" class="org.olat.presentation.user.administration.UserSearchControllerFactoryImpl" />

</beans>
